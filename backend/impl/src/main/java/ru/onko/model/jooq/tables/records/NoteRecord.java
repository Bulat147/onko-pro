/*
 * This file is generated by jOOQ.
 */
package ru.onko.model.jooq.tables.records;


import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import ru.onko.model.jooq.tables.Note;
import ru.onko.model.jooq.tables.pojos.NoteEntity;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NoteRecord extends UpdatableRecordImpl<NoteRecord> implements Record7<UUID, UUID, String, String, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.note.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.note.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.note.account_id</code>.
     */
    public void setAccountId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.note.account_id</code>.
     */
    public UUID getAccountId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.note.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.note.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.note.treatment</code>.
     */
    public void setTreatment(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.note.treatment</code>.
     */
    public String getTreatment() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.note.content</code>.
     */
    public void setContent(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.note.content</code>.
     */
    public String getContent() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.note.created_date</code>.
     */
    public void setCreatedDate(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.note.created_date</code>.
     */
    public LocalDateTime getCreatedDate() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>public.note.updated_date</code>.
     */
    public void setUpdatedDate(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.note.updated_date</code>.
     */
    public LocalDateTime getUpdatedDate() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<UUID, UUID, String, String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<UUID, UUID, String, String, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Note.NOTE_ENTITY.ID;
    }

    @Override
    public Field<UUID> field2() {
        return Note.NOTE_ENTITY.ACCOUNT_ID;
    }

    @Override
    public Field<String> field3() {
        return Note.NOTE_ENTITY.NAME;
    }

    @Override
    public Field<String> field4() {
        return Note.NOTE_ENTITY.TREATMENT;
    }

    @Override
    public Field<String> field5() {
        return Note.NOTE_ENTITY.CONTENT;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Note.NOTE_ENTITY.CREATED_DATE;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Note.NOTE_ENTITY.UPDATED_DATE;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public UUID component2() {
        return getAccountId();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getTreatment();
    }

    @Override
    public String component5() {
        return getContent();
    }

    @Override
    public LocalDateTime component6() {
        return getCreatedDate();
    }

    @Override
    public LocalDateTime component7() {
        return getUpdatedDate();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public UUID value2() {
        return getAccountId();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getTreatment();
    }

    @Override
    public String value5() {
        return getContent();
    }

    @Override
    public LocalDateTime value6() {
        return getCreatedDate();
    }

    @Override
    public LocalDateTime value7() {
        return getUpdatedDate();
    }

    @Override
    public NoteRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public NoteRecord value2(UUID value) {
        setAccountId(value);
        return this;
    }

    @Override
    public NoteRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public NoteRecord value4(String value) {
        setTreatment(value);
        return this;
    }

    @Override
    public NoteRecord value5(String value) {
        setContent(value);
        return this;
    }

    @Override
    public NoteRecord value6(LocalDateTime value) {
        setCreatedDate(value);
        return this;
    }

    @Override
    public NoteRecord value7(LocalDateTime value) {
        setUpdatedDate(value);
        return this;
    }

    @Override
    public NoteRecord values(UUID value1, UUID value2, String value3, String value4, String value5, LocalDateTime value6, LocalDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NoteRecord
     */
    public NoteRecord() {
        super(Note.NOTE_ENTITY);
    }

    /**
     * Create a detached, initialised NoteRecord
     */
    public NoteRecord(UUID id, UUID accountId, String name, String treatment, String content, LocalDateTime createdDate, LocalDateTime updatedDate) {
        super(Note.NOTE_ENTITY);

        setId(id);
        setAccountId(accountId);
        setName(name);
        setTreatment(treatment);
        setContent(content);
        setCreatedDate(createdDate);
        setUpdatedDate(updatedDate);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised NoteRecord
     */
    public NoteRecord(NoteEntity value) {
        super(Note.NOTE_ENTITY);

        if (value != null) {
            setId(value.getId());
            setAccountId(value.getAccountId());
            setName(value.getName());
            setTreatment(value.getTreatment());
            setContent(value.getContent());
            setCreatedDate(value.getCreatedDate());
            setUpdatedDate(value.getUpdatedDate());
            resetChangedOnNotNull();
        }
    }
}
