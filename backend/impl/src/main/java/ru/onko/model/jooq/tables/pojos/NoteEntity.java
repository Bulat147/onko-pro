/*
 * This file is generated by jOOQ.
 */
package ru.onko.model.jooq.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.UUID;

import lombok.Builder;

/**
 * This class is generated by jOOQ.
 */
@Builder
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NoteEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID id;
    private UUID accountId;
    private String name;
    private String treatment;
    private String content;
    private LocalDateTime createdDate;
    private LocalDateTime updatedDate;

    public NoteEntity() {}

    public NoteEntity(NoteEntity value) {
        this.id = value.id;
        this.accountId = value.accountId;
        this.name = value.name;
        this.treatment = value.treatment;
        this.content = value.content;
        this.createdDate = value.createdDate;
        this.updatedDate = value.updatedDate;
    }

    public NoteEntity(
        UUID id,
        UUID accountId,
        String name,
        String treatment,
        String content,
        LocalDateTime createdDate,
        LocalDateTime updatedDate
    ) {
        this.id = id;
        this.accountId = accountId;
        this.name = name;
        this.treatment = treatment;
        this.content = content;
        this.createdDate = createdDate;
        this.updatedDate = updatedDate;
    }

    /**
     * Getter for <code>public.note.id</code>.
     */
    public UUID getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.note.id</code>.
     */
    public void setId(UUID id) {
        this.id = id;
    }

    /**
     * Getter for <code>public.note.account_id</code>.
     */
    public UUID getAccountId() {
        return this.accountId;
    }

    /**
     * Setter for <code>public.note.account_id</code>.
     */
    public void setAccountId(UUID accountId) {
        this.accountId = accountId;
    }

    /**
     * Getter for <code>public.note.name</code>.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>public.note.name</code>.
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for <code>public.note.treatment</code>.
     */
    public String getTreatment() {
        return this.treatment;
    }

    /**
     * Setter for <code>public.note.treatment</code>.
     */
    public void setTreatment(String treatment) {
        this.treatment = treatment;
    }

    /**
     * Getter for <code>public.note.content</code>.
     */
    public String getContent() {
        return this.content;
    }

    /**
     * Setter for <code>public.note.content</code>.
     */
    public void setContent(String content) {
        this.content = content;
    }

    /**
     * Getter for <code>public.note.created_date</code>.
     */
    public LocalDateTime getCreatedDate() {
        return this.createdDate;
    }

    /**
     * Setter for <code>public.note.created_date</code>.
     */
    public void setCreatedDate(LocalDateTime createdDate) {
        this.createdDate = createdDate;
    }

    /**
     * Getter for <code>public.note.updated_date</code>.
     */
    public LocalDateTime getUpdatedDate() {
        return this.updatedDate;
    }

    /**
     * Setter for <code>public.note.updated_date</code>.
     */
    public void setUpdatedDate(LocalDateTime updatedDate) {
        this.updatedDate = updatedDate;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final NoteEntity other = (NoteEntity) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.accountId == null) {
            if (other.accountId != null)
                return false;
        }
        else if (!this.accountId.equals(other.accountId))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.treatment == null) {
            if (other.treatment != null)
                return false;
        }
        else if (!this.treatment.equals(other.treatment))
            return false;
        if (this.content == null) {
            if (other.content != null)
                return false;
        }
        else if (!this.content.equals(other.content))
            return false;
        if (this.createdDate == null) {
            if (other.createdDate != null)
                return false;
        }
        else if (!this.createdDate.equals(other.createdDate))
            return false;
        if (this.updatedDate == null) {
            if (other.updatedDate != null)
                return false;
        }
        else if (!this.updatedDate.equals(other.updatedDate))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.accountId == null) ? 0 : this.accountId.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.treatment == null) ? 0 : this.treatment.hashCode());
        result = prime * result + ((this.content == null) ? 0 : this.content.hashCode());
        result = prime * result + ((this.createdDate == null) ? 0 : this.createdDate.hashCode());
        result = prime * result + ((this.updatedDate == null) ? 0 : this.updatedDate.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("NoteEntity (");

        sb.append(id);
        sb.append(", ").append(accountId);
        sb.append(", ").append(name);
        sb.append(", ").append(treatment);
        sb.append(", ").append(content);
        sb.append(", ").append(createdDate);
        sb.append(", ").append(updatedDate);

        sb.append(")");
        return sb.toString();
    }
}
