/*
 * This file is generated by jOOQ.
 */
package ru.onko.model.jooq.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.UUID;

import lombok.Builder;
import ru.onko.model.jooq.enums.AccountState;
import ru.onko.model.jooq.enums.Gender;

import lombok.Builder;

/**
 * This class is generated by jOOQ.
 */
@Builder
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID id;
    private String email;
    private String hashPassword;
    private AccountState state;
    private String firstName;
    private String lastName;
    private Gender gender;
    private LocalDateTime birthDate;
    private UUID photoId;
    private LocalDateTime createdDate;
    private LocalDateTime updatedDate;

    public AccountEntity() {}

    public AccountEntity(AccountEntity value) {
        this.id = value.id;
        this.email = value.email;
        this.hashPassword = value.hashPassword;
        this.state = value.state;
        this.firstName = value.firstName;
        this.lastName = value.lastName;
        this.gender = value.gender;
        this.birthDate = value.birthDate;
        this.photoId = value.photoId;
        this.createdDate = value.createdDate;
        this.updatedDate = value.updatedDate;
    }

    public AccountEntity(
        UUID id,
        String email,
        String hashPassword,
        AccountState state,
        String firstName,
        String lastName,
        Gender gender,
        LocalDateTime birthDate,
        UUID photoId,
        LocalDateTime createdDate,
        LocalDateTime updatedDate
    ) {
        this.id = id;
        this.email = email;
        this.hashPassword = hashPassword;
        this.state = state;
        this.firstName = firstName;
        this.lastName = lastName;
        this.gender = gender;
        this.birthDate = birthDate;
        this.photoId = photoId;
        this.createdDate = createdDate;
        this.updatedDate = updatedDate;
    }

    /**
     * Getter for <code>public.account.id</code>.
     */
    public UUID getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.account.id</code>.
     */
    public void setId(UUID id) {
        this.id = id;
    }

    /**
     * Getter for <code>public.account.email</code>.
     */
    public String getEmail() {
        return this.email;
    }

    /**
     * Setter for <code>public.account.email</code>.
     */
    public void setEmail(String email) {
        this.email = email;
    }

    /**
     * Getter for <code>public.account.hash_password</code>.
     */
    public String getHashPassword() {
        return this.hashPassword;
    }

    /**
     * Setter for <code>public.account.hash_password</code>.
     */
    public void setHashPassword(String hashPassword) {
        this.hashPassword = hashPassword;
    }

    /**
     * Getter for <code>public.account.state</code>.
     */
    public AccountState getState() {
        return this.state;
    }

    /**
     * Setter for <code>public.account.state</code>.
     */
    public void setState(AccountState state) {
        this.state = state;
    }

    /**
     * Getter for <code>public.account.first_name</code>.
     */
    public String getFirstName() {
        return this.firstName;
    }

    /**
     * Setter for <code>public.account.first_name</code>.
     */
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    /**
     * Getter for <code>public.account.last_name</code>.
     */
    public String getLastName() {
        return this.lastName;
    }

    /**
     * Setter for <code>public.account.last_name</code>.
     */
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    /**
     * Getter for <code>public.account.gender</code>.
     */
    public Gender getGender() {
        return this.gender;
    }

    /**
     * Setter for <code>public.account.gender</code>.
     */
    public void setGender(Gender gender) {
        this.gender = gender;
    }

    /**
     * Getter for <code>public.account.birth_date</code>.
     */
    public LocalDateTime getBirthDate() {
        return this.birthDate;
    }

    /**
     * Setter for <code>public.account.birth_date</code>.
     */
    public void setBirthDate(LocalDateTime birthDate) {
        this.birthDate = birthDate;
    }

    /**
     * Getter for <code>public.account.photo_id</code>.
     */
    public UUID getPhotoId() {
        return this.photoId;
    }

    /**
     * Setter for <code>public.account.photo_id</code>.
     */
    public void setPhotoId(UUID photoId) {
        this.photoId = photoId;
    }

    /**
     * Getter for <code>public.account.created_date</code>.
     */
    public LocalDateTime getCreatedDate() {
        return this.createdDate;
    }

    /**
     * Setter for <code>public.account.created_date</code>.
     */
    public void setCreatedDate(LocalDateTime createdDate) {
        this.createdDate = createdDate;
    }

    /**
     * Getter for <code>public.account.updated_date</code>.
     */
    public LocalDateTime getUpdatedDate() {
        return this.updatedDate;
    }

    /**
     * Setter for <code>public.account.updated_date</code>.
     */
    public void setUpdatedDate(LocalDateTime updatedDate) {
        this.updatedDate = updatedDate;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final AccountEntity other = (AccountEntity) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.email == null) {
            if (other.email != null)
                return false;
        }
        else if (!this.email.equals(other.email))
            return false;
        if (this.hashPassword == null) {
            if (other.hashPassword != null)
                return false;
        }
        else if (!this.hashPassword.equals(other.hashPassword))
            return false;
        if (this.state == null) {
            if (other.state != null)
                return false;
        }
        else if (!this.state.equals(other.state))
            return false;
        if (this.firstName == null) {
            if (other.firstName != null)
                return false;
        }
        else if (!this.firstName.equals(other.firstName))
            return false;
        if (this.lastName == null) {
            if (other.lastName != null)
                return false;
        }
        else if (!this.lastName.equals(other.lastName))
            return false;
        if (this.gender == null) {
            if (other.gender != null)
                return false;
        }
        else if (!this.gender.equals(other.gender))
            return false;
        if (this.birthDate == null) {
            if (other.birthDate != null)
                return false;
        }
        else if (!this.birthDate.equals(other.birthDate))
            return false;
        if (this.photoId == null) {
            if (other.photoId != null)
                return false;
        }
        else if (!this.photoId.equals(other.photoId))
            return false;
        if (this.createdDate == null) {
            if (other.createdDate != null)
                return false;
        }
        else if (!this.createdDate.equals(other.createdDate))
            return false;
        if (this.updatedDate == null) {
            if (other.updatedDate != null)
                return false;
        }
        else if (!this.updatedDate.equals(other.updatedDate))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.email == null) ? 0 : this.email.hashCode());
        result = prime * result + ((this.hashPassword == null) ? 0 : this.hashPassword.hashCode());
        result = prime * result + ((this.state == null) ? 0 : this.state.hashCode());
        result = prime * result + ((this.firstName == null) ? 0 : this.firstName.hashCode());
        result = prime * result + ((this.lastName == null) ? 0 : this.lastName.hashCode());
        result = prime * result + ((this.gender == null) ? 0 : this.gender.hashCode());
        result = prime * result + ((this.birthDate == null) ? 0 : this.birthDate.hashCode());
        result = prime * result + ((this.photoId == null) ? 0 : this.photoId.hashCode());
        result = prime * result + ((this.createdDate == null) ? 0 : this.createdDate.hashCode());
        result = prime * result + ((this.updatedDate == null) ? 0 : this.updatedDate.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("AccountEntity (");

        sb.append(id);
        sb.append(", ").append(email);
        sb.append(", ").append(hashPassword);
        sb.append(", ").append(state);
        sb.append(", ").append(firstName);
        sb.append(", ").append(lastName);
        sb.append(", ").append(gender);
        sb.append(", ").append(birthDate);
        sb.append(", ").append(photoId);
        sb.append(", ").append(createdDate);
        sb.append(", ").append(updatedDate);

        sb.append(")");
        return sb.toString();
    }
}
