/*
 * This file is generated by jOOQ.
 */
package ru.onko.model.jooq.tables.pojos;


import java.io.Serializable;
import java.util.UUID;

import lombok.Builder;

/**
 * This class is generated by jOOQ.
 */
@Builder
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NotesSymptomsEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID noteId;
    private UUID symptomId;

    public NotesSymptomsEntity() {}

    public NotesSymptomsEntity(NotesSymptomsEntity value) {
        this.noteId = value.noteId;
        this.symptomId = value.symptomId;
    }

    public NotesSymptomsEntity(
        UUID noteId,
        UUID symptomId
    ) {
        this.noteId = noteId;
        this.symptomId = symptomId;
    }

    /**
     * Getter for <code>public.notes_symptoms.note_id</code>.
     */
    public UUID getNoteId() {
        return this.noteId;
    }

    /**
     * Setter for <code>public.notes_symptoms.note_id</code>.
     */
    public void setNoteId(UUID noteId) {
        this.noteId = noteId;
    }

    /**
     * Getter for <code>public.notes_symptoms.symptom_id</code>.
     */
    public UUID getSymptomId() {
        return this.symptomId;
    }

    /**
     * Setter for <code>public.notes_symptoms.symptom_id</code>.
     */
    public void setSymptomId(UUID symptomId) {
        this.symptomId = symptomId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final NotesSymptomsEntity other = (NotesSymptomsEntity) obj;
        if (this.noteId == null) {
            if (other.noteId != null)
                return false;
        }
        else if (!this.noteId.equals(other.noteId))
            return false;
        if (this.symptomId == null) {
            if (other.symptomId != null)
                return false;
        }
        else if (!this.symptomId.equals(other.symptomId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.noteId == null) ? 0 : this.noteId.hashCode());
        result = prime * result + ((this.symptomId == null) ? 0 : this.symptomId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("NotesSymptomsEntity (");

        sb.append(noteId);
        sb.append(", ").append(symptomId);

        sb.append(")");
        return sb.toString();
    }
}
