/*
 * This file is generated by jOOQ.
 */
package ru.onko.model.jooq.tables.records;


import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;

import ru.onko.model.jooq.enums.AccountState;
import ru.onko.model.jooq.enums.Gender;
import ru.onko.model.jooq.tables.Account;
import ru.onko.model.jooq.tables.pojos.AccountEntity;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountRecord extends UpdatableRecordImpl<AccountRecord> implements Record11<UUID, String, String, AccountState, String, String, Gender, LocalDateTime, UUID, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.account.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.account.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.account.email</code>.
     */
    public void setEmail(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.account.email</code>.
     */
    public String getEmail() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.account.hash_password</code>.
     */
    public void setHashPassword(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.account.hash_password</code>.
     */
    public String getHashPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.account.state</code>.
     */
    public void setState(AccountState value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.account.state</code>.
     */
    public AccountState getState() {
        return (AccountState) get(3);
    }

    /**
     * Setter for <code>public.account.first_name</code>.
     */
    public void setFirstName(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.account.first_name</code>.
     */
    public String getFirstName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.account.last_name</code>.
     */
    public void setLastName(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.account.last_name</code>.
     */
    public String getLastName() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.account.gender</code>.
     */
    public void setGender(Gender value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.account.gender</code>.
     */
    public Gender getGender() {
        return (Gender) get(6);
    }

    /**
     * Setter for <code>public.account.birth_date</code>.
     */
    public void setBirthDate(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.account.birth_date</code>.
     */
    public LocalDateTime getBirthDate() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>public.account.photo_id</code>.
     */
    public void setPhotoId(UUID value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.account.photo_id</code>.
     */
    public UUID getPhotoId() {
        return (UUID) get(8);
    }

    /**
     * Setter for <code>public.account.created_date</code>.
     */
    public void setCreatedDate(LocalDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.account.created_date</code>.
     */
    public LocalDateTime getCreatedDate() {
        return (LocalDateTime) get(9);
    }

    /**
     * Setter for <code>public.account.updated_date</code>.
     */
    public void setUpdatedDate(LocalDateTime value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.account.updated_date</code>.
     */
    public LocalDateTime getUpdatedDate() {
        return (LocalDateTime) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<UUID, String, String, AccountState, String, String, Gender, LocalDateTime, UUID, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<UUID, String, String, AccountState, String, String, Gender, LocalDateTime, UUID, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Account.ACCOUNT_ENTITY.ID;
    }

    @Override
    public Field<String> field2() {
        return Account.ACCOUNT_ENTITY.EMAIL;
    }

    @Override
    public Field<String> field3() {
        return Account.ACCOUNT_ENTITY.HASH_PASSWORD;
    }

    @Override
    public Field<AccountState> field4() {
        return Account.ACCOUNT_ENTITY.STATE;
    }

    @Override
    public Field<String> field5() {
        return Account.ACCOUNT_ENTITY.FIRST_NAME;
    }

    @Override
    public Field<String> field6() {
        return Account.ACCOUNT_ENTITY.LAST_NAME;
    }

    @Override
    public Field<Gender> field7() {
        return Account.ACCOUNT_ENTITY.GENDER;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return Account.ACCOUNT_ENTITY.BIRTH_DATE;
    }

    @Override
    public Field<UUID> field9() {
        return Account.ACCOUNT_ENTITY.PHOTO_ID;
    }

    @Override
    public Field<LocalDateTime> field10() {
        return Account.ACCOUNT_ENTITY.CREATED_DATE;
    }

    @Override
    public Field<LocalDateTime> field11() {
        return Account.ACCOUNT_ENTITY.UPDATED_DATE;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getEmail();
    }

    @Override
    public String component3() {
        return getHashPassword();
    }

    @Override
    public AccountState component4() {
        return getState();
    }

    @Override
    public String component5() {
        return getFirstName();
    }

    @Override
    public String component6() {
        return getLastName();
    }

    @Override
    public Gender component7() {
        return getGender();
    }

    @Override
    public LocalDateTime component8() {
        return getBirthDate();
    }

    @Override
    public UUID component9() {
        return getPhotoId();
    }

    @Override
    public LocalDateTime component10() {
        return getCreatedDate();
    }

    @Override
    public LocalDateTime component11() {
        return getUpdatedDate();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getEmail();
    }

    @Override
    public String value3() {
        return getHashPassword();
    }

    @Override
    public AccountState value4() {
        return getState();
    }

    @Override
    public String value5() {
        return getFirstName();
    }

    @Override
    public String value6() {
        return getLastName();
    }

    @Override
    public Gender value7() {
        return getGender();
    }

    @Override
    public LocalDateTime value8() {
        return getBirthDate();
    }

    @Override
    public UUID value9() {
        return getPhotoId();
    }

    @Override
    public LocalDateTime value10() {
        return getCreatedDate();
    }

    @Override
    public LocalDateTime value11() {
        return getUpdatedDate();
    }

    @Override
    public AccountRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public AccountRecord value2(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public AccountRecord value3(String value) {
        setHashPassword(value);
        return this;
    }

    @Override
    public AccountRecord value4(AccountState value) {
        setState(value);
        return this;
    }

    @Override
    public AccountRecord value5(String value) {
        setFirstName(value);
        return this;
    }

    @Override
    public AccountRecord value6(String value) {
        setLastName(value);
        return this;
    }

    @Override
    public AccountRecord value7(Gender value) {
        setGender(value);
        return this;
    }

    @Override
    public AccountRecord value8(LocalDateTime value) {
        setBirthDate(value);
        return this;
    }

    @Override
    public AccountRecord value9(UUID value) {
        setPhotoId(value);
        return this;
    }

    @Override
    public AccountRecord value10(LocalDateTime value) {
        setCreatedDate(value);
        return this;
    }

    @Override
    public AccountRecord value11(LocalDateTime value) {
        setUpdatedDate(value);
        return this;
    }

    @Override
    public AccountRecord values(UUID value1, String value2, String value3, AccountState value4, String value5, String value6, Gender value7, LocalDateTime value8, UUID value9, LocalDateTime value10, LocalDateTime value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AccountRecord
     */
    public AccountRecord() {
        super(Account.ACCOUNT_ENTITY);
    }

    /**
     * Create a detached, initialised AccountRecord
     */
    public AccountRecord(UUID id, String email, String hashPassword, AccountState state, String firstName, String lastName, Gender gender, LocalDateTime birthDate, UUID photoId, LocalDateTime createdDate, LocalDateTime updatedDate) {
        super(Account.ACCOUNT_ENTITY);

        setId(id);
        setEmail(email);
        setHashPassword(hashPassword);
        setState(state);
        setFirstName(firstName);
        setLastName(lastName);
        setGender(gender);
        setBirthDate(birthDate);
        setPhotoId(photoId);
        setCreatedDate(createdDate);
        setUpdatedDate(updatedDate);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised AccountRecord
     */
    public AccountRecord(AccountEntity value) {
        super(Account.ACCOUNT_ENTITY);

        if (value != null) {
            setId(value.getId());
            setEmail(value.getEmail());
            setHashPassword(value.getHashPassword());
            setState(value.getState());
            setFirstName(value.getFirstName());
            setLastName(value.getLastName());
            setGender(value.getGender());
            setBirthDate(value.getBirthDate());
            setPhotoId(value.getPhotoId());
            setCreatedDate(value.getCreatedDate());
            setUpdatedDate(value.getUpdatedDate());
            resetChangedOnNotNull();
        }
    }
}
