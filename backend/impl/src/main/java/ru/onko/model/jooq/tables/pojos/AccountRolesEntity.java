/*
 * This file is generated by jOOQ.
 */
package ru.onko.model.jooq.tables.pojos;


import java.io.Serializable;
import java.util.UUID;

import lombok.Builder;
import ru.onko.model.jooq.enums.AccountRole;

import lombok.Builder;

/**
 * This class is generated by jOOQ.
 */
@Builder
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountRolesEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID accountId;
    private AccountRole accountRole;

    public AccountRolesEntity() {}

    public AccountRolesEntity(AccountRolesEntity value) {
        this.accountId = value.accountId;
        this.accountRole = value.accountRole;
    }

    public AccountRolesEntity(
        UUID accountId,
        AccountRole accountRole
    ) {
        this.accountId = accountId;
        this.accountRole = accountRole;
    }

    /**
     * Getter for <code>public.account_roles.account_id</code>.
     */
    public UUID getAccountId() {
        return this.accountId;
    }

    /**
     * Setter for <code>public.account_roles.account_id</code>.
     */
    public void setAccountId(UUID accountId) {
        this.accountId = accountId;
    }

    /**
     * Getter for <code>public.account_roles.account_role</code>.
     */
    public AccountRole getAccountRole() {
        return this.accountRole;
    }

    /**
     * Setter for <code>public.account_roles.account_role</code>.
     */
    public void setAccountRole(AccountRole accountRole) {
        this.accountRole = accountRole;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final AccountRolesEntity other = (AccountRolesEntity) obj;
        if (this.accountId == null) {
            if (other.accountId != null)
                return false;
        }
        else if (!this.accountId.equals(other.accountId))
            return false;
        if (this.accountRole == null) {
            if (other.accountRole != null)
                return false;
        }
        else if (!this.accountRole.equals(other.accountRole))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.accountId == null) ? 0 : this.accountId.hashCode());
        result = prime * result + ((this.accountRole == null) ? 0 : this.accountRole.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("AccountRolesEntity (");

        sb.append(accountId);
        sb.append(", ").append(accountRole);

        sb.append(")");
        return sb.toString();
    }
}
